---
title: "STAT570 Homework"
format: html
editor: visual
author:   
  - Oğuzhan Aydın & Kübra Nur Akdemir
---

## Running Code

Firstly, required packages are uploaded.

```{r,message=FALSE, warning=FALSE}
library(dplyr)
library(purrr)
library(readxl)
library(sqldf)
library(plotly)
library(stringr)
library(janitor)
library(dplyr)
library(ggplot2)
library(leaflet)
library(purrr)
library(tidyr)
```

Data is downloaded from the internet in the format of .xlsx. The first 10 rows are skipped. A new column whose name is "*year*" is added. Then, some of variable names were changed. Lastly, *year, locality, n_offers* variables are selected from the data set. Also, variables whose name started with "average" are selected.

```{r,message=FALSE, warning=FALSE}
# The url below points to an Excel file
# hosted on the book’s github repository
url <- "https://is.gd/1vvBAc"

raw_data <- tempfile(fileext = ".xlsx")

download.file(url, raw_data,
              method = "auto",
              mode = "wb")

sheets <- excel_sheets(raw_data)

read_clean <- function(..., sheet){
  read_excel(..., sheet = sheet) |>
    mutate(year = sheet)
}

raw_data <- map(
  sheets,
  ~read_clean(raw_data,
              skip = 10,
              sheet = .)
                   ) |>
  bind_rows() |>
  clean_names()

raw_data <- raw_data |>
  rename(
    locality = commune,
    n_offers = nombre_doffres,
    average_price_nominal_euros = prix_moyen_annonce_en_courant,
    average_price_m2_nominal_euros = prix_moyen_annonce_au_m2_en_courant,
    average_price_m2_nominal_euros = prix_moyen_annonce_au_m2_en_courant
  ) |>
  mutate(locality = str_trim(locality)) |>
  select(year, locality, n_offers, starts_with("average"))
```

The data is printed. We have a data set which contains 5 variable with 1343 observation in the format of tibble. However, there is a problem. When we look at some variables such as year and average price, the class of the variables are character. It should be numeric.

```{r,message=FALSE, warning=FALSE}
raw_data
```

Another problem is that some of the observations, such as Luxembourg and Petanga, are spelled differently even though they are same.

```{r,message=FALSE, warning=FALSE}
raw_data |>
  filter(grepl("Luxembourg", locality)) |>
  count(locality)
```

Spelling errors have been fixed. Also, variables whose name start with average are converted to numeric.

```{r,message=FALSE, warning=FALSE}
raw_data <- raw_data |>
  mutate(
    locality = ifelse(grepl("Luxembourg-Ville", locality),
                      "Luxembourg",
                      locality),
         locality = ifelse(grepl("P.tange", locality),
                           "Pétange",
                           locality)
         ) |>
  mutate(across(starts_with("average"),
         as.numeric))
```

NAs introduced by coercion. We will check it.

```{r,message=FALSE, warning=FALSE}
raw_data |>
  filter(is.na(average_price_nominal_euros))
```

Go back to raw data and check it.

We need to remove specific rows. First, remove rows with missing "locality." Then, address the "Total d'offres" row, which represents the total offers from every commune. Consider keeping it in a separate dataset or removing it. Remove the last row, which contains data source information. Also, in the screenshot, there's a row missing "n_offers," providing national average data for "average_prince_nominal_euros" and "average_price_m2_nominal_euros." Create two datasets: one for communes and the other for national prices. Let's first remove the rows stating the sources:

```{r,message=FALSE, warning=FALSE}
raw_data <- raw_data |>
  filter(!grepl("Source", locality))
```

A new data set created. In this new data set there is no na value under the locality variable and no observation including nationale or offres.

```{r,message=FALSE, warning=FALSE}
commune_level_data <- raw_data |>
    filter(!grepl("nationale|offres", locality),
           !is.na(locality))
```

Two new data set is created. Country level data set includes the observations which includes nationale in locality variable. Also, dropped n_offers variable. In the offers_country data set, observations which includes Total d.offres in locality variable are filtered. Then, only year and n_offers variable are selected. Lastly, two data frame are combined.

```{r,message=FALSE, warning=FALSE}
country_level <- raw_data |>
  filter(grepl("nationale", locality)) |>
  select(-n_offers)

offers_country <- raw_data |>
  filter(grepl("Total d.offres", locality)) |>
  select(year, n_offers)

country_level_data <- full_join(country_level, offers_country) |>
  select(year, locality, n_offers, everything()) |>
  mutate(locality = "Grand-Duchy of Luxembourg")
```

It is scraped and list is saved.

```{r,message=FALSE, warning=FALSE}
current_communes <- "https://is.gd/lux_communes" |>
  rvest::read_html() |>
  rvest::html_table() |>
  purrr::pluck(2) |>
  janitor::clean_names() |>
  dplyr::filter(name_2 != "Name") |>
  dplyr::rename(commune = name_2) |>
  dplyr::mutate(commune = stringr::str_remove(commune, " .$"))
```

It is checked if we have all the communes in our data:

```{r,message=FALSE, warning=FALSE}
setdiff(unique(commune_level_data$locality),
        current_communes$commune)
```

There are some communees in the commune level data but not in current communes data. This difference is caused by spelling. Another reason is because several communes have merged into new ones.

Firstly, we should get a list of all existing communes from 2010 onwards; then harmonise spelling.

```{r,message=FALSE, warning=FALSE}
former_communes <- "https://is.gd/lux_former_communes" |>
  rvest::read_html() |>
  rvest::html_table() |>
  purrr::pluck(3) |>
  janitor::clean_names() |>
  dplyr::filter(year_dissolved > 2009)

former_communes
```

It is clear that, since 2010, numerous communes have merged to create new ones. We should now merge the lists of current and previous communes while standardizing their names.

```{r,message=FALSE, warning=FALSE}
communes <- unique(c(former_communes$name,
                     current_communes$commune))
# we need to rename some communes

# Different spelling of these communes between wikipedia and the data

communes[which(communes == "Clemency")] <- "Clémency"
communes[which(communes == "Redange")] <- "Redange-sur-Attert"
communes[which(communes == "Erpeldange-sur-Sûre")] <- "Erpeldange"
communes[which(communes == "Luxembourg City")] <- "Luxembourg"
communes[which(communes == "Käerjeng")] <- "Kaerjeng"
communes[which(communes == "Petange")] <- "Pétange"
```

```{r,message=FALSE, warning=FALSE}
setdiff(unique(commune_level_data$locality),
        communes)
```

## Analysing the Data

**How average prices have changed in 10 years?**

```{r, message=FALSE, warning=FALSE, fig.width=8, fig.height=6}

commune_level_data$year <- as.factor(commune_level_data$year)
pricebyyear <- commune_level_data |> 
  group_by(year) |>
  summarize(Avg_Price = mean(average_price_nominal_euros, na.rm = TRUE)) |>
  as.data.frame()

plot_ly(pricebyyear, x = ~year, y = ~Avg_Price, type = "scatter",
        mode = "lines+markers") |>
  layout(
    marker = list(color = "blue")
  )

```

*In the 8 years from 2010 to 2018, prices increased by approximately 0.3 M euros on average. On the other hand, the average price increase in the 2 years between 2018-2020 increased by 0.3m euros, equal to the previous 8 years.*

**Question: Are the provinces with the highest average offers in 10 years located nearby on the map?**

```{r, message=FALSE, warning=FALSE}
sqldf("SELECT locality, SUM(n_offers) AS NumOffers FROM commune_level_data GROUP BY locality ORDER BY NumOffers DESC LIMIT 5") # Firstly, find the top 5 cities.

top5 <- data.frame(City = c("Luxembourg", "Differdange", "Esch-sur-Alzette", "Ettelbruck", "Pétange"), longitude = c(6.1319, 5.8917, 5.9806, 6.10417, 5.88056),
           lattitude = c(49.61167, 49.52417, 49.49583, 49.8475, 49.55833))
center_lon <- median(top5$longitude, na.rm = TRUE)
center_lat <- median(top5$lattitude, na.rm = TRUE)
leaflet() %>%
  addProviderTiles("Esri") %>%
  addMarkers(
    data = top5,
    lng = ~longitude,
    lat = ~lattitude,
    popup = ~City
  ) %>%
  setView(lng = center_lon, lat = center_lat, zoom = 8)
```

*When we check the number of offers, we can say that there is more demand for houses in the south of the country, closer to France.*

**Question: How have the square meter pricing of houses in the top 5 cities with the most offers changed over the years?**

```{r, message=FALSE, warning=FALSE}
result <- commune_level_data %>%
  group_by(locality) %>%
  summarize(NumOffers = sum(n_offers)) %>%
  arrange(desc(NumOffers))
top_cities <- head(result$locality, 5)

filtered_data <- commune_level_data %>%
  filter(locality %in% c('Luxembourg', 'Differdange', 'Esch-sur-Alzette', 'Ettelbruck', 'Pétange')) %>%
  group_by(year, locality) %>%
  summarize(average_price_m2 = mean(average_price_m2_nominal_euros))
filtered_data <- as.data.frame(filtered_data)

plot_ly(filtered_data, x = ~year, y = ~average_price_m2, linetype = ~locality, type = "scatter",
        mode = "lines+markers") |>
  layout(
    marker = list(color = "blue")
  )

```

*Similar to the findings in the first question, except Luxembourg, the increase in 8 years between 2010 and 2018 in square meter pricing of houses is almost equal to the increase in 2 years between 2018-2020. On the other hand, Luxembourg always has a higher average price than the others. Its price is almost twice that of others.*

**Question: Which localities has the top 10 average price per square meter over the years?**

```{r, message=FALSE, warning=FALSE}
highest_avg_price_locality <- commune_level_data %>%
  group_by(locality) %>%
  summarise(avg_price_per_m2 = mean(average_price_m2_nominal_euros)) %>%
  arrange(desc(avg_price_per_m2)) %>%
  head(10)

highest_avg_price_locality
#| echo: false
ggplot(highest_avg_price_locality, aes(x = reorder(locality, -avg_price_per_m2), y = avg_price_per_m2, fill = locality)) +
  geom_bar(stat = "identity") +
  labs(title = "Locality with Highest Average Price per Square Meter",
       x = "Locality",
       y = "Average Price per Square Meter (Nominal Euros)",
       fill = "Locality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

*According to the bar plot, the average price per square meter of housing in the highest-priced localities is in Luxembourg. The most expensive locality is Luxembourg City, with an average price per square meter of 6000 euros. This is followed by Strassen, Bertrange, Niederanven, and Walferdange.*

**Question: What is the relationship between the number of offers and average housing prices per square meter of Schengen**

```{r, message=FALSE, warning=FALSE}
specific_locality_data <- subset(commune_level_data, locality == "Schengen")
specific_locality <- "Schengen"

# Create a scatter plot to visualize the relationship between number of offers and average housing prices per square meter
ggplot(specific_locality_data, aes(x = n_offers, y = average_price_m2_nominal_euros, color = factor(year))) +
  geom_point(size = 3, alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed", color = "black") +
  labs(title = paste("Relationship between Number of Offers and Average Housing Prices in", specific_locality),
       x = "Number of Offers",
       y = "Average Price per Square Meter (Nominal Euros)",
       color = "Year") +
  theme_minimal() +
  theme(legend.position = "bottom")
```

*According to plot, there is a strong linear relationship between the number of housing offers and the average house price in Schengen. This means that as the number of housing offers increases, the average house price increases. This is a positive correlation.*
